{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qihan\\\\OneDrive\\\\Documents\\\\CursorProjects\\\\ToDoList\\\\client\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { apiService } from '../services/api';\nimport { format } from 'date-fns';\nimport { Circle, Play, Pause, CheckCircle, Flag, Calendar, Plus, ChevronDown, ChevronRight } from 'lucide-react';\nimport clsx from 'clsx';\nimport TaskEditModal from './TaskEditModal';\nimport TaskTooltip from './TaskTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  viewMode,\n  filters,\n  onFiltersChange\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingTask, setEditingTask] = useState(null);\n  const [hoveredTask, setHoveredTask] = useState(null);\n  const [expandedAreas, setExpandedAreas] = useState(new Set());\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [isCreatingTask, setIsCreatingTask] = useState(false);\n  const newTaskInputRef = useRef(null);\n  const loadData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const [tasksData, areasData] = await Promise.all([apiService.getTasks(filters), apiService.getAreas()]);\n      setTasks(tasksData);\n      setAreas(areasData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n  const handleStatusClick = async task => {\n    try {\n      let newStatus;\n      switch (task.status) {\n        case 'todo':\n          newStatus = 'in_progress';\n          break;\n        case 'in_progress':\n          newStatus = 'paused';\n          break;\n        case 'paused':\n          newStatus = 'in_progress';\n          break;\n        default:\n          return;\n      }\n      await apiService.updateTaskStatus(task.id, newStatus);\n      await loadData();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  const handleStatusDoubleClick = async task => {\n    try {\n      await apiService.updateTaskStatus(task.id, 'done');\n      await loadData();\n    } catch (error) {\n      console.error('Error completing task:', error);\n    }\n  };\n  const handleCreateTask = async () => {\n    if (!newTaskTitle.trim()) return;\n    try {\n      setIsCreatingTask(true);\n      await apiService.createTask({\n        title: newTaskTitle.trim(),\n        area_id: filters.area_id\n      });\n      setNewTaskTitle('');\n      await loadData();\n    } catch (error) {\n      console.error('Error creating task:', error);\n    } finally {\n      setIsCreatingTask(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleCreateTask();\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'todo':\n        return /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this);\n      case 'in_progress':\n        return /*#__PURE__*/_jsxDEV(Play, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this);\n      case 'paused':\n        return /*#__PURE__*/_jsxDEV(Pause, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this);\n      case 'done':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'todo':\n        return 'text-gray-400 hover:text-gray-600';\n      case 'in_progress':\n        return 'text-blue-500 hover:text-blue-700';\n      case 'paused':\n        return 'text-yellow-500 hover:text-yellow-700';\n      case 'done':\n        return 'text-green-500 hover:text-green-700';\n    }\n  };\n  const getPriorityIcon = priority => {\n    const baseClasses = \"w-3 h-3\";\n    switch (priority) {\n      case 'urgent':\n        return /*#__PURE__*/_jsxDEV(Flag, {\n          className: clsx(baseClasses, \"text-red-500 fill-red-500\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this);\n      case 'high':\n        return /*#__PURE__*/_jsxDEV(Flag, {\n          className: clsx(baseClasses, \"text-yellow-500 fill-yellow-500\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }, this);\n      case 'normal':\n        return /*#__PURE__*/_jsxDEV(Flag, {\n          className: clsx(baseClasses, \"text-green-500 fill-green-500\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this);\n      case 'low':\n        return /*#__PURE__*/_jsxDEV(Flag, {\n          className: clsx(baseClasses, \"text-gray-400 fill-gray-400\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const toggleAreaExpansion = areaId => {\n    const newExpanded = new Set(expandedAreas);\n    if (newExpanded.has(areaId)) {\n      newExpanded.delete(areaId);\n    } else {\n      newExpanded.add(areaId);\n    }\n    setExpandedAreas(newExpanded);\n  };\n  const groupTasksByArea = () => {\n    const grouped = {};\n    tasks.forEach(task => {\n      const areaName = task.area_name || 'Unassigned';\n      if (!grouped[areaName]) {\n        grouped[areaName] = [];\n      }\n      grouped[areaName].push(task);\n    });\n    return grouped;\n  };\n  const groupedTasks = groupTasksByArea();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2 p-2 bg-gray-50 rounded border\",\n      children: [/*#__PURE__*/_jsxDEV(Plus, {\n        className: \"w-4 h-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: newTaskInputRef,\n        type: \"text\",\n        placeholder: \"Add new task...\",\n        value: newTaskTitle,\n        onChange: e => setNewTaskTitle(e.target.value),\n        onKeyPress: handleKeyPress,\n        disabled: isCreatingTask,\n        className: \"flex-1 bg-transparent border-none outline-none text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), Object.entries(groupedTasks).map(([areaName, areaTasks]) => {\n      var _areas$find2, _areas$find3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-2 bg-gray-100 cursor-pointer hover:bg-gray-200\",\n          onClick: () => {\n            var _areas$find;\n            return toggleAreaExpansion(((_areas$find = areas.find(a => a.name === areaName)) === null || _areas$find === void 0 ? void 0 : _areas$find.id) || 0);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [expandedAreas.has(((_areas$find2 = areas.find(a => a.name === areaName)) === null || _areas$find2 === void 0 ? void 0 : _areas$find2.id) || 0) ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-sm\",\n              children: areaName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"(\", areaTasks.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), expandedAreas.has(((_areas$find3 = areas.find(a => a.name === areaName)) === null || _areas$find3 === void 0 ? void 0 : _areas$find3.id) || 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divide-y\",\n          children: areaTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3 p-3 hover:bg-gray-50 relative\",\n            onMouseEnter: () => setHoveredTask(task.id),\n            onMouseLeave: () => setHoveredTask(null),\n            onDoubleClick: () => setEditingTask(task),\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStatusClick(task),\n              onDoubleClick: () => handleStatusDoubleClick(task),\n              className: clsx(\"p-1 rounded hover:bg-gray-200 transition-colors\", getStatusColor(task.status)),\n              title: `Click to change status, double-click to complete`,\n              children: getStatusIcon(task.status)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: getPriorityIcon(task.priority)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 min-w-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium truncate\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), task.sub_task_count > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: [task.completed_sub_tasks, \"/\", task.sub_task_count, \" sub-tasks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), task.due_date && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"w-3 h-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(new Date(task.due_date), 'MMM d')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this), hoveredTask === task.id && task.description && /*#__PURE__*/_jsxDEV(TaskTooltip, {\n              description: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, areaName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this);\n    }), editingTask && /*#__PURE__*/_jsxDEV(TaskEditModal, {\n      task: editingTask,\n      areas: areas,\n      onClose: () => setEditingTask(null),\n      onSave: async updatedTask => {\n        try {\n          await apiService.updateTask(updatedTask.id, {\n            title: updatedTask.title,\n            description: updatedTask.description,\n            area_id: updatedTask.area_id,\n            priority: updatedTask.priority,\n            due_date: updatedTask.due_date\n          });\n          await loadData();\n          setEditingTask(null);\n        } catch (error) {\n          console.error('Error updating task:', error);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"C6hWee8KC8jB6A7MmB8/8QYxo4k=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","apiService","format","Circle","Play","Pause","CheckCircle","Flag","Calendar","Plus","ChevronDown","ChevronRight","clsx","TaskEditModal","TaskTooltip","jsxDEV","_jsxDEV","TaskList","viewMode","filters","onFiltersChange","_s","tasks","setTasks","areas","setAreas","loading","setLoading","editingTask","setEditingTask","hoveredTask","setHoveredTask","expandedAreas","setExpandedAreas","Set","newTaskTitle","setNewTaskTitle","isCreatingTask","setIsCreatingTask","newTaskInputRef","loadData","tasksData","areasData","Promise","all","getTasks","getAreas","error","console","handleStatusClick","task","newStatus","status","updateTaskStatus","id","handleStatusDoubleClick","handleCreateTask","trim","createTask","title","area_id","handleKeyPress","e","key","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","getPriorityIcon","priority","baseClasses","toggleAreaExpansion","areaId","newExpanded","has","delete","add","groupTasksByArea","grouped","forEach","areaName","area_name","push","groupedTasks","children","ref","type","placeholder","value","onChange","target","onKeyPress","disabled","Object","entries","map","areaTasks","_areas$find2","_areas$find3","onClick","_areas$find","find","a","name","length","onMouseEnter","onMouseLeave","onDoubleClick","sub_task_count","completed_sub_tasks","due_date","Date","description","onClose","onSave","updatedTask","updateTask","_c","$RefreshReg$"],"sources":["C:/Users/qihan/OneDrive/Documents/CursorProjects/ToDoList/client/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { Task, TaskFilters, Area } from '../types';\r\nimport { apiService } from '../services/api';\r\nimport { format } from 'date-fns';\r\nimport { \r\n  Circle, \r\n  Play, \r\n  Pause, \r\n  CheckCircle, \r\n  Flag, \r\n  Calendar,\r\n  Plus,\r\n  ChevronDown,\r\n  ChevronRight\r\n} from 'lucide-react';\r\nimport clsx from 'clsx';\r\nimport TaskEditModal from './TaskEditModal';\r\nimport TaskTooltip from './TaskTooltip';\r\n\r\ninterface TaskListProps {\r\n  viewMode: 'planner' | 'tracker';\r\n  filters: TaskFilters;\r\n  onFiltersChange: (filters: TaskFilters) => void;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ viewMode, filters, onFiltersChange }) => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [areas, setAreas] = useState<Area[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [hoveredTask, setHoveredTask] = useState<number | null>(null);\r\n  const [expandedAreas, setExpandedAreas] = useState<Set<number>>(new Set());\r\n  const [newTaskTitle, setNewTaskTitle] = useState('');\r\n  const [isCreatingTask, setIsCreatingTask] = useState(false);\r\n  const newTaskInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const loadData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [tasksData, areasData] = await Promise.all([\r\n        apiService.getTasks(filters),\r\n        apiService.getAreas()\r\n      ]);\r\n      setTasks(tasksData);\r\n      setAreas(areasData);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  const handleStatusClick = async (task: Task) => {\r\n    try {\r\n      let newStatus: Task['status'];\r\n      \r\n      switch (task.status) {\r\n        case 'todo':\r\n          newStatus = 'in_progress';\r\n          break;\r\n        case 'in_progress':\r\n          newStatus = 'paused';\r\n          break;\r\n        case 'paused':\r\n          newStatus = 'in_progress';\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      \r\n      await apiService.updateTaskStatus(task.id, newStatus);\r\n      await loadData();\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n    }\r\n  };\r\n\r\n  const handleStatusDoubleClick = async (task: Task) => {\r\n    try {\r\n      await apiService.updateTaskStatus(task.id, 'done');\r\n      await loadData();\r\n    } catch (error) {\r\n      console.error('Error completing task:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    if (!newTaskTitle.trim()) return;\r\n    \r\n    try {\r\n      setIsCreatingTask(true);\r\n      await apiService.createTask({\r\n        title: newTaskTitle.trim(),\r\n        area_id: filters.area_id\r\n      });\r\n      setNewTaskTitle('');\r\n      await loadData();\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    } finally {\r\n      setIsCreatingTask(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleCreateTask();\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Task['status']) => {\r\n    switch (status) {\r\n      case 'todo':\r\n        return <Circle className=\"w-4 h-4\" />;\r\n      case 'in_progress':\r\n        return <Play className=\"w-4 h-4\" />;\r\n      case 'paused':\r\n        return <Pause className=\"w-4 h-4\" />;\r\n      case 'done':\r\n        return <CheckCircle className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Task['status']) => {\r\n    switch (status) {\r\n      case 'todo':\r\n        return 'text-gray-400 hover:text-gray-600';\r\n      case 'in_progress':\r\n        return 'text-blue-500 hover:text-blue-700';\r\n      case 'paused':\r\n        return 'text-yellow-500 hover:text-yellow-700';\r\n      case 'done':\r\n        return 'text-green-500 hover:text-green-700';\r\n    }\r\n  };\r\n\r\n  const getPriorityIcon = (priority: Task['priority']) => {\r\n    const baseClasses = \"w-3 h-3\";\r\n    switch (priority) {\r\n      case 'urgent':\r\n        return <Flag className={clsx(baseClasses, \"text-red-500 fill-red-500\")} />;\r\n      case 'high':\r\n        return <Flag className={clsx(baseClasses, \"text-yellow-500 fill-yellow-500\")} />;\r\n      case 'normal':\r\n        return <Flag className={clsx(baseClasses, \"text-green-500 fill-green-500\")} />;\r\n      case 'low':\r\n        return <Flag className={clsx(baseClasses, \"text-gray-400 fill-gray-400\")} />;\r\n    }\r\n  };\r\n\r\n  const toggleAreaExpansion = (areaId: number) => {\r\n    const newExpanded = new Set(expandedAreas);\r\n    if (newExpanded.has(areaId)) {\r\n      newExpanded.delete(areaId);\r\n    } else {\r\n      newExpanded.add(areaId);\r\n    }\r\n    setExpandedAreas(newExpanded);\r\n  };\r\n\r\n  const groupTasksByArea = () => {\r\n    const grouped: { [key: string]: Task[] } = {};\r\n    tasks.forEach(task => {\r\n      const areaName = task.area_name || 'Unassigned';\r\n      if (!grouped[areaName]) {\r\n        grouped[areaName] = [];\r\n      }\r\n      grouped[areaName].push(task);\r\n    });\r\n    return grouped;\r\n  };\r\n\r\n  const groupedTasks = groupTasksByArea();\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-64\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {/* New task input */}\r\n      <div className=\"flex items-center space-x-2 p-2 bg-gray-50 rounded border\">\r\n        <Plus className=\"w-4 h-4 text-gray-400\" />\r\n        <input\r\n          ref={newTaskInputRef}\r\n          type=\"text\"\r\n          placeholder=\"Add new task...\"\r\n          value={newTaskTitle}\r\n          onChange={(e) => setNewTaskTitle(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          disabled={isCreatingTask}\r\n          className=\"flex-1 bg-transparent border-none outline-none text-sm\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tasks by area */}\r\n      {Object.entries(groupedTasks).map(([areaName, areaTasks]) => (\r\n        <div key={areaName} className=\"border rounded\">\r\n          {/* Area header */}\r\n          <div \r\n            className=\"flex items-center justify-between p-2 bg-gray-100 cursor-pointer hover:bg-gray-200\"\r\n            onClick={() => toggleAreaExpansion(areas.find(a => a.name === areaName)?.id || 0)}\r\n          >\r\n            <div className=\"flex items-center space-x-2\">\r\n              {expandedAreas.has(areas.find(a => a.name === areaName)?.id || 0) ? (\r\n                <ChevronDown className=\"w-4 h-4\" />\r\n              ) : (\r\n                <ChevronRight className=\"w-4 h-4\" />\r\n              )}\r\n              <span className=\"font-medium text-sm\">{areaName}</span>\r\n              <span className=\"text-xs text-gray-500\">({areaTasks.length})</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tasks in area */}\r\n          {expandedAreas.has(areas.find(a => a.name === areaName)?.id || 0) && (\r\n            <div className=\"divide-y\">\r\n              {areaTasks.map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 relative\"\r\n                  onMouseEnter={() => setHoveredTask(task.id)}\r\n                  onMouseLeave={() => setHoveredTask(null)}\r\n                  onDoubleClick={() => setEditingTask(task)}\r\n                >\r\n                  {/* Status button */}\r\n                  <button\r\n                    onClick={() => handleStatusClick(task)}\r\n                    onDoubleClick={() => handleStatusDoubleClick(task)}\r\n                    className={clsx(\r\n                      \"p-1 rounded hover:bg-gray-200 transition-colors\",\r\n                      getStatusColor(task.status)\r\n                    )}\r\n                    title={`Click to change status, double-click to complete`}\r\n                  >\r\n                    {getStatusIcon(task.status)}\r\n                  </button>\r\n\r\n                  {/* Priority flag */}\r\n                  <div className=\"flex-shrink-0\">\r\n                    {getPriorityIcon(task.priority)}\r\n                  </div>\r\n\r\n                  {/* Task title */}\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"text-sm font-medium truncate\">\r\n                      {task.title}\r\n                    </div>\r\n                    {task.sub_task_count > 0 && (\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        {task.completed_sub_tasks}/{task.sub_task_count} sub-tasks\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Due date */}\r\n                  {task.due_date && (\r\n                    <div className=\"flex items-center space-x-1 text-xs text-gray-500\">\r\n                      <Calendar className=\"w-3 h-3\" />\r\n                      <span>{format(new Date(task.due_date), 'MMM d')}</span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Tooltip */}\r\n                  {hoveredTask === task.id && task.description && (\r\n                    <TaskTooltip description={task.description} />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Edit modal */}\r\n      {editingTask && (\r\n        <TaskEditModal\r\n          task={editingTask}\r\n          areas={areas}\r\n          onClose={() => setEditingTask(null)}\r\n          onSave={async (updatedTask) => {\r\n            try {\r\n              await apiService.updateTask(updatedTask.id, {\r\n                title: updatedTask.title,\r\n                description: updatedTask.description,\r\n                area_id: updatedTask.area_id,\r\n                priority: updatedTask.priority,\r\n                due_date: updatedTask.due_date\r\n              });\r\n              await loadData();\r\n              setEditingTask(null);\r\n            } catch (error) {\r\n              console.error('Error updating task:', error);\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}